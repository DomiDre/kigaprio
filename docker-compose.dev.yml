services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    image: kigaprio-backend:dev
    volumes:
      - ./backend/src:/app/src
      - ./backend/pyproject.toml:/app/pyproject.toml
      - ./backend/uv.lock:/app/uv.lock:ro
    environment:
      - ENV=development
      - DEBUG=true
      - CORS_ORIGINS=http://localhost:5173,http://localhost:8000
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - POCKETBASE_URL=http://pocketbase:8090
    ports:
      - "8000:8000"
    command: uv run uvicorn kigaprio.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      pocketbase:
        condition: service_healthy
      redis:
        condition: service_healthy
    secrets:
      - admin_master_key
      - pb_service_id
      - pb_service_password

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    image: kigaprio-frontend:dev
    volumes:
      # Mount entire frontend directory for hot reload
      - ./frontend:/app
      - /app/node_modules  # Exclude node_modules from host mount
    environment:
      - NODE_ENV=development
      - USE_DEV_HTTPS=false
    ports:
      - "5173:5173"  # Vite dev server
    depends_on:
      backend:
        condition: service_healthy

  pocketbase:
    build:
      context: ./pocketbase
      dockerfile: Dockerfile
      args:
        - USER_UID=1000
        - USER_GID=1000
        - PB_VERSION=0.30.0
    image: kigaprio-pocketbase
    restart: unless-stopped
    expose:
      - 8090
    ports:
      - "8090:8090"
    volumes:
      - ./pocketbase/pb_data:/pb/pb_data
      - ./pocketbase/pb_public:/pb/pb_public
      - ./pocketbase/pb_migrations:/pb/pb_migrations
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8090/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    secrets:
      - pb_admin_email
      - pb_admin_password

  redis:
    image: redis:8-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/data
    command: redis-server --appendonly yes --appendfsync everysec
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

secrets:
  admin_master_key:
    file: ./.secrets/admin_master_key
  pb_admin_email:
    file: ./.secrets/pb_admin_email
  pb_admin_password:
    file: ./.secrets/pb_admin_password
  pb_service_id:
    file: ./.secrets/pb_service_id
  pb_service_password:
    file: ./.secrets/pb_service_password
  
