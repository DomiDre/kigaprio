services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    image: kigaprio-backend
    restart: unless-stopped
    volumes:
      - frontend-static:/app/static:ro
    environment:
      - ENV=production
      - DEBUG=false
      - REDIS_URL=redis://redis:6379
      - POCKETBASE_URL=http://pocketbase:8090
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kigaprio-backend.rule=Host(`kiga.dhjd.de`)"
      - "traefik.http.routers.kigaprio-backend.entrypoints=websecure"
      - "traefik.http.routers.kigaprio-backend.tls=true"
      - "traefik.http.routers.kigaprio-backend.tls.certresolver=myresolver"
      - "traefik.http.services.kigaprio-backend.loadbalancer.server.port=8000"
      
      # Attach security headers middleware to the router
      - "traefik.http.routers.kigaprio-backend.middlewares=security-headers@docker"
      - "traefik.http.middlewares.security-headers.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.security-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.security-headers.headers.customFrameOptionsValue=DENY"
      - "traefik.http.middlewares.security-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.security-headers.headers.referrerPolicy=strict-origin-when-cross-origin"

    depends_on:
      pocketbase:
        condition: service_healthy
      redis:
        condition: service_healthy
      frontend-builder:
        condition: service_completed_successfully
    networks:
      - kigaprio-prod
      - proxy
    expose:
      - 8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    secrets:
      - admin_public_key
      - pb_service_id
      - pb_service_password

  # Build frontend and copy static files
  frontend-builder:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: builder
    image: kigaprio-frontend-builder
    restart: "no"
    user: "0:0"
    volumes:
      - frontend-static:/shared/build
    command: |
      sh -c "
        chown -R node:node /shared
        cp -r /app/build/* /shared/build/
      "

  pocketbase:
    build:
      context: ./pocketbase
      dockerfile: Dockerfile
      args:
        - USER_UID=1000
        - USER_GID=1000
        - PB_VERSION=0.30.2
    image: kigaprio-pocketbase
    restart: unless-stopped
    expose:
      - 8090
    volumes:
      - ./pocketbase/pb_data:/pb/pb_data
      - ./pocketbase/pb_public:/pb/pb_public
      - ./pocketbase/pb_migrations:/pb/pb_migrations
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8090/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kigaprio-prod
    secrets:
      - pb_admin_email
      - pb_admin_password

  redis:
    image: redis:8-alpine
    restart: unless-stopped
    expose:
      - 6379
    command: redis-server --save "" --appendonly no
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kigaprio-prod

volumes:
  frontend-static:

secrets:
  admin_public_key:
    file: ./.secrets/admin_public_key.pem
  pb_admin_email:
    file: ./.secrets/pb_admin_email
  pb_admin_password:
    file: ./.secrets/pb_admin_password
  pb_service_id:
    file: ./.secrets/pb_service_id
  pb_service_password:
    file: ./.secrets/pb_service_password
  

networks:
  kigaprio-prod:
    internal: true
  proxy:
    external: true
