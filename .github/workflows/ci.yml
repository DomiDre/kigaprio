name: CI

on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-checks:
    name: Backend Lint & Format
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install
      working-directory: ./backend
    
    - name: Install dependencies
      run: uv sync
      working-directory: ./backend
    
    - name: Run ruff check (linting)
      run: uv run ruff check .
      working-directory: ./backend
    
    - name: Run ruff format (formatting check)
      run: uv run ruff format --check .
      working-directory: ./backend
    
    - name: Run type checking with mypy (optional)
      run: uv run mypy .
      working-directory: ./backend
      continue-on-error: true  # Remove this if you want strict type checking

  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install
      working-directory: ./backend
    
    - name: Install dependencies
      run: uv sync
      working-directory: ./backend
    
    - name: Run tests
      run: uv run pytest
      working-directory: ./backend
      env:
        PUBLIC_POCKETBASE_URL: http://pocketbase:8090
        PUBLIC_API_URL: http://backend:8000

  frontend-security:
    name: Frontend Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
      working-directory: ./frontend
    
    - name: Run npm audit
      run: npm audit --audit-level=high
      working-directory: ./frontend

  frontend-checks:
    name: Frontend Lint & Format
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
      working-directory: ./frontend
    
    - name: Run ESLint
      run: npm run lint
      working-directory: ./frontend

    - name: Run Prettier check
      run: npm run format:check
      working-directory: ./frontend
    
    - name: Run Svelte check
      run: npm run check
      working-directory: ./frontend
      env:
        PUBLIC_POCKETBASE_URL: http://pocketbase:8090
        PUBLIC_API_URL: http://backend:8000
    
    - name: Run type checking
      run: npm run check:types
      working-directory: ./frontend
      env:
        PUBLIC_POCKETBASE_URL: http://pocketbase:8090
        PUBLIC_API_URL: http://backend:8000

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
      working-directory: ./frontend
    
    - name: Run tests
      run: npm run test
      working-directory: ./frontend
      env:
        PUBLIC_POCKETBASE_URL: http://pocketbase:8090
        PUBLIC_API_URL: http://backend:8000

  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
      working-directory: ./frontend

    - name: Build
      run: npm run build
      working-directory: ./frontend
      env:
        PUBLIC_POCKETBASE_URL: http://pocketbase:8090
        PUBLIC_API_URL: http://backend:8000
